# Generated by Django 5.2.3 on 2025-07-16 16:16

import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('embed', '0001_enable_pgvector'),
    ]

    operations = [
        migrations.CreateModel(
            name='VectorSearch1536',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(editable=False, null=True)),
                ('source', models.CharField(blank=True, max_length=1000, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_chunk', models.BooleanField(default=False, help_text='Indicates if this is a chunk of a larger document')),
                ('chunk_number', models.IntegerField(blank=True, help_text='Chunk number if this is a chunk of a larger document', null=True)),
                ('type', models.CharField(blank=True, help_text="Type of the content, e.g., 'text', 'image', etc.", max_length=100, null=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, help_text='Vector embeddings for gemini, and cohere v4', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VectorSearch2048',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(editable=False, null=True)),
                ('source', models.CharField(blank=True, max_length=1000, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_chunk', models.BooleanField(default=False, help_text='Indicates if this is a chunk of a larger document')),
                ('chunk_number', models.IntegerField(blank=True, help_text='Chunk number if this is a chunk of a larger document', null=True)),
                ('type', models.CharField(blank=True, help_text="Type of the content, e.g., 'text', 'image', etc.", max_length=100, null=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=2048, help_text='Vector embeddings for gemini, and jina v4', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VectorSearch3072',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(editable=False, null=True)),
                ('source', models.CharField(blank=True, max_length=1000, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('is_chunk', models.BooleanField(default=False, help_text='Indicates if this is a chunk of a larger document')),
                ('chunk_number', models.IntegerField(blank=True, help_text='Chunk number if this is a chunk of a larger document', null=True)),
                ('type', models.CharField(blank=True, help_text="Type of the content, e.g., 'text', 'image', etc.", max_length=100, null=True)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=3072, help_text='Vector embeddings for gemini, and jina v4', null=True)),
            ],
        ),
    ]
